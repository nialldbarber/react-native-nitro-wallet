///
/// HybridNitroWalletSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridNitroWalletSpec``
public protocol HybridNitroWalletSpec_protocol: HybridObject {
  // Properties
  

  // Methods
  func canAddPassesToAppleWallet() throws -> Promise<Bool>
  func addPassToAppleWallet(base64String: String) throws -> Promise<Bool>
  func viewPassInAppleWallet(cardIdentifier: String, serialNumber: String?) throws -> Promise<Void>
  func doesPassExistInAppleWallet(cardIdentifier: String, serialNumber: String?) throws -> Promise<Bool>
  func removePassFromAppleWallet(cardIdentifier: String, serialNumber: String?) throws -> Promise<Void>
}

/// See ``HybridNitroWalletSpec``
public class HybridNitroWalletSpec_base {
  private weak var cxxWrapper: HybridNitroWalletSpec_cxx? = nil
  public func getCxxWrapper() -> HybridNitroWalletSpec_cxx {
  #if DEBUG
    guard self is HybridNitroWalletSpec else {
      fatalError("`self` is not a `HybridNitroWalletSpec`! Did you accidentally inherit from `HybridNitroWalletSpec_base` instead of `HybridNitroWalletSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridNitroWalletSpec_cxx(self as! HybridNitroWalletSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the NitroWallet HybridObject.
 * Implement this protocol to create Swift-based instances of NitroWallet.
 * ```swift
 * class HybridNitroWallet : HybridNitroWalletSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridNitroWalletSpec = HybridNitroWalletSpec_protocol & HybridNitroWalletSpec_base
